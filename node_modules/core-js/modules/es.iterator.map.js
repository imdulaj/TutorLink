'use strict';
var $ = require('../internals/export');
<<<<<<< Updated upstream
var map = require('../internals/iterator-map');
=======
<<<<<<< HEAD
var call = require('../internals/function-call');
var aCallable = require('../internals/a-callable');
var anObject = require('../internals/an-object');
var getIteratorDirect = require('../internals/get-iterator-direct');
var createIteratorProxy = require('../internals/iterator-create-proxy');
var callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');
var iteratorClose = require('../internals/iterator-close');
var iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');
>>>>>>> Stashed changes
var IS_PURE = require('../internals/is-pure');

// `Iterator.prototype.map` method
// https://tc39.es/ecma262/#sec-iterator.prototype.map
<<<<<<< Updated upstream
$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE }, {
  map: map
=======
$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE || mapWithoutClosingOnEarlyError }, {
  map: function map(mapper) {
    anObject(this);
    try {
      aCallable(mapper);
    } catch (error) {
      iteratorClose(this, 'throw', error);
    }

    if (mapWithoutClosingOnEarlyError) return call(mapWithoutClosingOnEarlyError, this, mapper);

    return new IteratorProxy(getIteratorDirect(this), {
      mapper: mapper
    });
  }
=======
var map = require('../internals/iterator-map');
var IS_PURE = require('../internals/is-pure');

// `Iterator.prototype.map` method
// https://tc39.es/ecma262/#sec-iterator.prototype.map
$({ target: 'Iterator', proto: true, real: true, forced: IS_PURE }, {
  map: map
>>>>>>> 69e8710b5147290d914d36de8207a28e3f260ae6
>>>>>>> Stashed changes
});
